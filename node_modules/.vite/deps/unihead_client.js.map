{
  "version": 3,
  "sources": ["../../unihead/client.mjs"],
  "sourcesContent": ["\nclass HeadElement {\n  name = null\n  elem = null\n  value = null\n  attrs = null\n  constructor (elem, name, document) {\n    this.document = document\n    this.name = name\n    this.elem = elem\n    this.value = elem?.textContent\n    this.attrs = this.getAttributes(elem?.attributes || [])\n  }\n\n  getAttributes (domAttributes) {\n    const attributes = []\n    for (let i = 0; i < domAttributes.length; i++) {\n      attributes[i] = domAttributes[i]\n    }\n    return Object.fromEntries(attributes.map((attr) => {\n      return [attr.name, attr.value]\n    }))\n  }\n\n  create ({ value, attrs }) {\n    this.elem = this.document.createElement(this.name)\n    this.update({ value, attrs })\n    return this.elem\n  }\n\n  update ({ value, attrs }) {\n    if (attrs) {\n      for (const [attr, value] of Object.entries(attrs)) {\n        this.elem.setAttribute(attr, value)\n      }\n    }\n    if (value) {\n      this.elem.innerText = value\n    }\n  }\n}\n\nclass HeadData {\n  // Head elements\n  title = null\n  base = null\n  meta = null\n  link = null\n  style = null\n  script = null\n  // Attributes for <html> and <body> tags\n  htmlAttrs = null\n  bodyAttrs = null\n  constructor () {\n    this.meta = []\n    this.link = []\n    this.style = []\n    this.script = []\n  }\n\n  find (elem, { attrs, value }) {\n    if (elem === 'meta') {\n      for (const item of this[elem]) {\n        if (attrs.name && item.attrs.name === attrs.name) {\n          return item\n        } else if (attrs.property && item.attrs.property === attrs.property) {\n          return item\n        }\n      }\n    } else {\n      for (const item of this[elem]) {\n        if (item.value === value && Object.entries(attrs).every(([attr, attrValue]) => {\n          return item.attrs[attr] === attrValue\n        })) {\n          return item\n        }\n      }\n    }\n  }\n}\n\nclass HeadManager {\n  // Single-element head elements\n  static single = ['title', 'base']\n  // Multiple-element self-closing head elements\n  static collective = ['link', 'meta', 'script']\n  // Head elements present on first load\n  original = null\n  // Head elements added dynamically after first load,\n  // typically bound to the current route only.\n  route = null\n  static canTrack (elem) {\n    if (!elem) {\n      return true\n    }\n    const tagName = elem.tagName.toLowerCase()\n    if (tagName === 'script') {\n      return !!elem.textContent\n    } else if (['meta', 'link', 'title', 'base'].includes(tagName)) {\n      return true\n    }\n  }\n  constructor (initial = {}, document) {\n    this.document = document\n    this.original = new HeadData()\n    this.route = new HeadData()\n    // Hydrate data model from what's already present in the DOM\n    for (const tag of ['title', 'base', 'meta', 'link', 'script']) {\n      if (Array.isArray(this.original[tag])) {\n        this.original[tag] = [...this.document.querySelectorAll(tag)]\n          .filter(elem => HeadManager.canTrack(elem))\n          .map(elem => new HeadElement(elem, tag, this.document))\n      } else {\n        const elem = this.document.querySelector(tag)\n        if (HeadManager.canTrack(elem)) {\n          this.original[tag] = new HeadElement(elem, tag, this.document)\n        }\n      }\n      if (Array.isArray(this.route[tag])) {\n        this.route[tag] = []\n      } else {\n        this.route[tag] = new HeadElement(null, tag, this.document)\n      }\n    }\n    if (initial) {\n      this.update(initial)\n    }\n  }\n\n  update (initial) {\n    for (const [tag, tagDef] of Object.entries(initial)) {\n      if (HeadManager.single.includes(tag)) {\n        if (typeof tagDef === 'string') {\n          this.setSingle(tag, { value: tagDef })\n        } else if (typeof tagDef === 'object' && tagDef !== null) {\n          this.setSingle(tag, { attrs: tagDef })\n        }\n      } else if (HeadManager.collective.includes(tag)) {\n        if (Array.isArray(tagDef)) {\n          for (const def of tagDef) {\n            this.setItem(tag, def)\n          }\n        } else {\n          this.setItem(tag, tagDef)\n        }\n      }\n    }\n  }\n\n  getSingle (elem) {\n    if (this.document.head.contains(this.route[elem])) {\n      return this.route[elem].value\n    } else if (this.document.head.contains(this.original[elem].elem)) {\n      return this.orignal[elem].value\n    }\n  }\n\n  // Sets a single <head> element like <title> or <base>\n  setSingle (elem, { value, attrs }) {\n    // If element has already been added or mutated before, just update\n    if (this.route[elem].elem) {\n      this.route[elem].update({ value, attrs })\n    // If element hasn't been added or mutated yet\n    } else {\n      // If there's a matching element already on the page\n      if (this.original[elem].elem) {\n        // Replace it with a newly created one\n        this.document.head.replaceChild(this.route[elem].create({ value, attrs }), this.original[elem].elem)\n      } else {\n        // If not, add a newly created one to the <head>\n        this.document.head.appendChild(this.route[elem].create({ value, attrs }))\n      }\n    }\n  }\n\n  setItem (elem, attrs) {\n    let routeElem = this.route.find(elem, { attrs })\n    // If element has been added or mutated already\n    if (routeElem) {\n      // Just update it\n      routeElem.update({ attrs })\n    // If element hasn't been added or mutated yet\n    } else {\n      // Create and register new element\n      routeElem = new HeadElement(null, elem, this.document)\n      routeElem.create({ attrs })\n      this.route[elem].push(routeElem)\n      // Check if there's a matching element already on the page\n      const originalElem = this.original.find(elem, { attrs })\n      if (originalElem) {\n        // Replace it with a newly created one if so\n        this.document.head.replaceChild(routeElem.elem, originalElem.elem)\n      } else {\n        // If not, add a newly created one to the <head>\n        this.document.head.appendChild(routeElem.elem)\n      }\n    }\n  }\n\n  reset () {\n    for (const tag of HeadManager.single) {\n      if (this.document.head.contains(this.route[tag].elem)) {\n        this.document.head.replaceChild(this.original[tag].elem, this.route[tag].elem)\n        this.route[tag].elem = new HeadElement(null, tag, this.document)\n      }\n    }\n    for (const tag of HeadManager.collective) {\n      for (const { elem } of this.route[tag]) {\n        this.document.head.removeChild(elem)\n      }\n      this.route[tag] = []\n      for (const { elem } of this.original[tag]) {\n        if (!this.document.head.contains(elem)) {\n          this.document.head.appendChild(elem)\n        }\n      }\n    }\n  }\n}\n\nclass Head {\n  constructor (initial, document) {\n    return new Proxy(new HeadManager(initial, document), {\n      get (head, elem) {\n        if (elem === 'update') {\n          return initialHead => head.update(initialHead)\n        }\n        if (elem === 'reset') {\n          return () => head.reset()\n        }\n        if (HeadManager.single.includes(elem)) {\n          return head.getSingle(elem)\n        } else if (HeadManager.collective.includes(elem)) {\n          const list = [\n            ...head.original[elem],\n            ...head.route[elem],\n          ].filter(({ elem }) => {\n            return document.head.contains(elem)\n          })\n          return new Proxy(list, {\n            get (_, prop) {\n              if (typeof prop === 'number') {\n                return list[prop]\n              } else if (prop === 'set') {\n                return (item) => {\n                  head.setItem(elem, item)\n                }\n              } else if (prop === 'push') {\n                return (items) => {\n                  for (const item of items) {\n                    head.setItem(elem, item)\n                  }\n                }\n              }\n            },\n          })\n        }\n      },\n      set (head, elem, value) {\n        if (HeadManager.single.includes(elem)) {\n          if (typeof value === 'string') {\n            head.setSingle(elem, { value })\n          } else if (typeof value === 'object' && value !== null) {\n            head.setSingle(elem, { attrs: value })\n          }\n          return value\n        } else if (HeadManager.collective.includes(elem)) {\n          if (!Array.isArray(value)) {\n            throw new Error(`Values must be in an array for setting ${elem} elements`)\n          }\n          for (const item of value) {\n            head.setItem(elem, item)\n          }\n        }\n      },\n    })\n  }\n}\n\nexport default Head\n"],
  "mappings": "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",
  "names": ["value", "elem"]
}
